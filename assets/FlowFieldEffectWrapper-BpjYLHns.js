import{r as n,j as w}from"./index-DC39g7s8.js";import"./hls.js-CqkleIqs.js";const u=e=>{n.useEffect(()=>{const s=e.current;if(!s)return;const h=s.getContext("2d");if(!h)return;const r=()=>{s.width=window.innerWidth,s.height=window.innerHeight},o=g(r,100);window.addEventListener("resize",o),r();class c{constructor(t){this.effect=t,this.x=Math.floor(Math.random()*this.effect.width),this.y=Math.floor(Math.random()*this.effect.height),this.speedX=0,this.speedY=0,this.speedModifier=Math.floor(Math.random()*5+1),this.history=[{x:this.x,y:this.y}],this.maxLength=Math.floor(Math.random()*200+10),this.angle=0,this.timer=this.maxLength*2,this.colors=["#3bc9f3","#38c5f1","#1a99dc","#1591d8"],this.color=this.colors[Math.floor(Math.random()*this.colors.length)],this.lineWidth=Math.random()*.7+.3}draw(t){t.beginPath(),t.moveTo(this.history[0].x,this.history[0].y);for(let i=0;i<this.history.length;i++)t.lineTo(this.history[i].x,this.history[i].y);t.lineWidth=this.lineWidth,t.strokeStyle=this.color,t.stroke()}update(){if(this.timer--,this.timer>=1){const t=Math.floor(this.x/this.effect.cellSize),a=Math.floor(this.y/this.effect.cellSize)*this.effect.cols+t;this.angle=this.effect.flowField[a],this.speedX=Math.cos(this.angle),this.speedY=Math.sin(this.angle),this.x+=this.speedX*this.speedModifier,this.y+=this.speedY*this.speedModifier,this.history.push({x:this.x,y:this.y}),this.history.length>this.maxLength&&this.history.shift()}else this.history.length>1?this.history.shift():this.reset()}reset(){this.x=Math.floor(Math.random()*this.effect.width),this.y=Math.floor(Math.random()*this.effect.height),this.history=[{x:this.x,y:this.y}],this.timer=this.maxLength*2}}class d{constructor(t){this.canvas=t,this.width=this.canvas.width,this.height=this.canvas.height,this.particles=[],this.numberParticles=this.getNumberOfParticles(window.innerWidth),this.cellSize=window.innerWidth<=768?30:40,this.rows=0,this.cols=0,this.flowField=[],this.curve=9,this.zoom=.01,this.debug=!1,this.init(),window.addEventListener("resize",o)}getNumberOfParticles(t){return t<=768?25:60}init(){this.rows=Math.floor(this.height/this.cellSize),this.cols=Math.floor(this.width/this.cellSize),this.flowField=[];for(let t=0;t<this.rows;t++)for(let i=0;i<this.cols;i++){const a=(Math.cos(i*this.zoom)+Math.sin(t*this.zoom))*this.curve;this.flowField.push(a)}this.particles=[];for(let t=0;t<this.numberParticles;t++)this.particles.push(new c(this))}drawGrid(t){t.save(),t.strokeStyle="white",t.lineWidth=.3;for(let i=0;i<this.cols;i++)t.beginPath(),t.moveTo(this.cellSize*i,0),t.lineTo(this.cellSize*i,this.height),t.stroke();for(let i=0;i<this.rows;i++)t.beginPath(),t.moveTo(0,this.cellSize*i),t.lineTo(this.width,this.cellSize*i),t.stroke();t.restore()}resize(t,i){this.canvas.width=t,this.canvas.height=i,this.width=this.canvas.width,this.height=this.canvas.height,this.numberParticles=this.getNumberOfParticles(t),this.cellSize=t<=768?30:40,this.init()}render(t){this.debug&&this.drawGrid(t),this.particles.forEach(i=>{i.draw(t),i.update()})}}const f=new d(s),l=()=>{h.clearRect(0,0,s.width,s.height),f.render(h),requestAnimationFrame(l)};return l(),()=>{window.removeEventListener("resize",o)}},[e])};function g(e,s){let h;return(...r)=>{clearTimeout(h),h=setTimeout(()=>e(...r),s)}}const p=()=>{const e=n.useRef(null);return u(e),w.jsx("canvas",{id:"bg-canvas",ref:e,className:"absolute left-0 top-0 h-max w-max"})};export{p as default};
